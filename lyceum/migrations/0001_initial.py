# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-01-06 09:22
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateField(verbose_name='Дата события')),
            ],
            options={
                'db_table': 'Events',
                'verbose_name_plural': 'События для календаря',
            },
        ),
        migrations.CreateModel(
            name='events_in_day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_begin_time', models.TimeField(verbose_name='Время начала')),
                ('event_end_time', models.TimeField(blank=True, null=True, verbose_name='Время окончания')),
                ('event_name', models.CharField(max_length=250, verbose_name='Название мероприятия')),
                ('event_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lyceum.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Lyceum_news',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Заголовок')),
                ('content', models.TextField(blank=True, verbose_name='Текст новости')),
                ('pub_date', models.DateTimeField(default=datetime.datetime(2017, 1, 6, 13, 22, 18, 575313), verbose_name='Дата и время публикации')),
            ],
            options={
                'db_table': 'News',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='positions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_name', models.CharField(max_length=50, verbose_name='Должность')),
            ],
            options={
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(default='avatar.png', upload_to='img', verbose_name='Изображение')),
                ('name', models.CharField(max_length=12, verbose_name='Имя')),
                ('surname', models.CharField(max_length=25, verbose_name='Фамилия')),
                ('last_name', models.CharField(max_length=25, verbose_name='Отчество')),
                ('education', models.TextField(verbose_name='Образование')),
                ('administration', models.BooleanField(default=False, verbose_name='Находится в администрации лицея')),
                ('position', models.ManyToManyField(to='lyceum.positions', verbose_name='Должность')),
            ],
            options={
                'db_table': 'Staff',
                'verbose_name_plural': 'Коллектив',
            },
        ),
        migrations.CreateModel(
            name='subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=20, verbose_name='Название предмета')),
            ],
            options={
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.AddField(
            model_name='staff',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='lyceum.subject', verbose_name='Преподаёт'),
        ),
    ]
